name: Build and Deploy to EKS

on:
  push:
    branches:
      - main
    paths:
      - 'Web/**/*.html'
      - 'Web/**/*.css'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secret.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          docker build -t myapp1:latestv10 .
          docker tag myapp1:latestv10 ${{ secret.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secret.AWS_REGION }}.amazonaws.com/piterbog:latestv10
      
      - name: Push image to ECR
        run: |
          docker push ${{ secret.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secret.AWS_REGION }}.amazonaws.com/piterbog:latestv10

  deploy:
    needs: build-and-deploy
    name: Deploy to EKS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup kubectl
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        run: |
          export KUBECONFIG=<(echo "$KUBE_CONFIG_DATA")

      - name: Deploy to EKS
        run: kubectl apply -f ./kubernetes/deploy-svc-1.yaml
        working-directory: ./kubernetes
        

          
