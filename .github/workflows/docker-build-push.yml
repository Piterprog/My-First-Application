name: Build, Push Docker Image, and Deploy to EKS

on:
  push:
    branches:
      - main
    paths:
      - 'Web/**/*.html'
      - 'Web/**/*.css'

jobs:
  build-push-and-deploy:
    runs-on: ubuntu-latest

    env:
      KUBE_CONFIG_PATH: ${{ github.workspace }}/kube.config

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Copy kube.config
        run: |
          mkdir -p ~/.kube
          cp $KUBE_CONFIG_PATH ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Configure AWS credentials for ECR
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get build date and time
        id: datetime
        run: echo "::set-output name=datetime::$(date +%Y-%m-%d_%H-%M-%S)"

      - name: Build Docker image
        run: |
          docker build -t myapp1:latestv1 .
          docker tag myapp1:latestv1 ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/piterbog:latestv1
          docker tag myapp1:latestv1 ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/piterbog:${{ steps.datetime.outputs.datetime }}
      
      - name: Push image to ECR
        id: push-image
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/piterbog:latestv1
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/piterbog:${{ steps.datetime.outputs.datetime }}

      - name: Configure kubectl
        uses: aws-actions/configure-kubectl@v1
        with:
          eks-region: us-east-1
          eks-cluster-name: k8s-prodaction 

      - name: Deploy to EKS
        run: kubectl apply -f kubernetes/deployment.yml 
        
        
     
