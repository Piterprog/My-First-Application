
Piter Kononihin <piterbog@gmail.com>
ср, 31 янв., 21:17 (2 дня назад)
кому: мне

name: Terraform Deploy

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.7.1

      - name: Check AWS credentials
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID &&
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY &&
          aws configure test

      - name: Terraform Init
        run: terraform init
        continue-on-error: false

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        continue-on-error: false

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        continue-on-error: false

      - name: Compare Terraform State
        run: |
          existing_state=$(aws s3 cp s3://your-bucket-name/path/to/terraform.tfstate -)
          current_state=$(cat terraform.tfstate)
          if [ "$existing_state" != "$current_state" ]; then
            echo "State has changed. Saving to S3."
            aws s3 cp terraform.tfstate s3://vpc-piter-kononihin-terraform/dev/vpc//terraform.tfstate
          else
            echo "No changes in Terraform state."
          fi
        continue-on-error: false

        